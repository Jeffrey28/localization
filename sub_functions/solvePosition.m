% Newton-Raphson method를 이용한 multivariable equation system solve
% 세 개의 위성의 위치와 거리로부터 GPS 수신기의 위치를 계산해줌
% 2017.04.12 홍효성

function X = solvePosition(X,x1,x2,x3,x4,d1,d2,d3,d4)
X_prev = X;

J = [2*(X(1)-x1(1)), 2*(X(2)-x1(2)), 2*(X(3)-x1(3));
    2*(X(1)-x2(1)), 2*(X(2)-x2(2)), 2*(X(3)-x2(3));
    2*(X(1)-x3(1)), 2*(X(2)-x3(2)), 2*(X(3)-x3(3));
    2*(X(1)-x4(1)), 2*(X(2)-x4(2)), 2*(X(3)-x4(3))];
f = [(X(1)-x1(1))^2+(X(2)-x1(2))^2+(X(3)-x1(3))^2-d1^2;
    (X(1)-x2(1))^2+(X(2)-x2(2))^2+(X(3)-x2(3))^2-d2^2;
    (X(1)-x3(1))^2+(X(2)-x3(2))^2+(X(3)-x3(3))^2-d3^2;
    (X(1)-x4(1))^2+(X(2)-x4(2))^2+(X(3)-x4(3))^2-d4^2];

X = X - pinv(J)*f;

iter = 0;

while norm(X - X_prev) > 10^-5    
    X_prev = X;
    
    J = [2*(X(1)-x1(1)), 2*(X(2)-x1(2)), 2*(X(3)-x1(3));
        2*(X(1)-x2(1)), 2*(X(2)-x2(2)), 2*(X(3)-x2(3));
        2*(X(1)-x3(1)), 2*(X(2)-x3(2)), 2*(X(3)-x3(3));
        2*(X(1)-x4(1)), 2*(X(2)-x4(2)), 2*(X(3)-x4(3))];
    
    f = [(X(1)-x1(1))^2+(X(2)-x1(2))^2+(X(3)-x1(3))^2-d1^2;
        (X(1)-x2(1))^2+(X(2)-x2(2))^2+(X(3)-x2(3))^2-d2^2;
        (X(1)-x3(1))^2+(X(2)-x3(2))^2+(X(3)-x3(3))^2-d3^2;
        (X(1)-x4(1))^2+(X(2)-x4(2))^2+(X(3)-x4(3))^2-d4^2];
    
    X = X - pinv(J)*f;
    
    iter = iter + 1;
    
    if iter > 1000
        break
    end
    
%     fprintf('iter=%d, X=%.3f, Y=%.3f, Z=%.3f\n',iter, X(1), X(2), X(3));
end

end